# ---
# language: python
# python: "2.7"
#
# # Use the new container infrastructure
# sudo: false
#
# # Install ansible
# addons:
#   apt:
#     packages:
#     - python-pip
#
# install:
#   # Install ansible
#   - pip install ansible
#
#   # Check ansible version
#   - ansible --version
#
#   # Create ansible.cfg with correct roles_path
#   - printf '[defaults]\nroles_path=../' >ansible.cfg
#
# script:
#   # Basic role syntax check
#   - ansible-playbook tests/test.yml -i tests/inventory --syntax-check
#
# notifications:
#   webhooks: https://galaxy.ansible.com/api/v1/notifications/
#

---
sudo: required

env:
  - distribution: ubuntu
    version: xenial
  - distribution: ubuntu
    version: trusty

services:
  - docker

before_install:
  - 'sudo docker pull ${distribution}:${version}'
#  - 'sudo docker build --no-cache --rm --file=travis/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible travis'


script:
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/ansible-krb5-server:ro ${distribution}:${version} > "${container_id}"'
  - 'sudo docker ps -a'
  - 'sudo docker exec "$(cat ${container_id})" apt-get update && apt-get dist-upgrade -y && apt-get install -y software-properties-common && rm -rf /var/lib/apt/lists/*'
  - 'sudo docker exec "$(cat ${container_id})" apt-add-repository -y ppa:ansible/ansible && apt-get update && apt-get install -y git ansible && rm -rf /var/lib/apt/lists/*'
  - 'sudo docker exec "$(cat ${container_id})" echo "[local]\nlocalhost ansible_connection=local" > /etc/ansible/hosts'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-krb5-server/test.yml --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-krb5-server/test.yml'
  - >
    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-krb5-server/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - 'sudo docker rm -f "$(cat ${container_id})"'
